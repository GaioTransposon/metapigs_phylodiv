ggplot(., aes(x=bwpd.alpha_1M,y=bwpd.alpha_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
#facet_wrap(~DNA_plate)+
geom_smooth(method="lm", size=0.3)
df %>%
ggplot(., aes(x=unrooted_pd.alpha_1M,y=unrooted_pd.alpha_100k))+
geom_point(shape=1, size=1)+
#facet_wrap(~DNA_plate)+
geom_smooth(method="lm", size=0.3)
df %>%
ggplot(., aes(x=bwpd.alpha_1M,y=bwpd.alpha_100k))+
geom_point(shape=1, size=1)+
#facet_wrap(~DNA_plate)+
geom_smooth(method="lm", size=0.3)
df
both
both %>%
ggplot(., aes(x=X2.beta_1M,y=X2.beta_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)
both %>%
ggplot(., aes(x=X3.beta_1M,y=X3.beta_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)
both %>%
ggplot(., aes(x=X4.beta_1M,y=X4.beta_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)
both %>%
ggplot(., aes(x=X5.beta_1M,y=X5.beta_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)
both %>%
ggplot(., aes(x=X6.beta_1M,y=X6.beta_100k, color=DNA_plate))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)
df
both <- inner_join(alpha_100K,alpha_1M, by = c("DNA_plate", "DNA_well")) %>%
dplyr::select(DNA_plate,DNA_well,unrooted_pd.x,unrooted_pd.y,bwpd.x, bwpd.y)
colnames(both) <- gsub("x","alpha_100k",colnames(both))
colnames(both) <- gsub("y","alpha_1M",colnames(both))
# merge read count info to PD info:
df <- inner_join(both,r, by=c("DNA_plate","DNA_well"))
df <- na.omit(df)
NROW(df)
df
df
df %>%
dply::select(DNA_plate,DNA_well,
unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M)
df %>%
dplyr::select(DNA_plate,DNA_well,
unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M)
df %>%
dplyr::select(DNA_plate,DNA_well,
unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M) %>%
pivot_longer(cols = c(unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M))
df %>%
dplyr::select(DNA_plate,DNA_well,
unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M) %>%
pivot_longer(cols = c(unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M),
names_to=metric)
df %>%
dplyr::select(DNA_plate,DNA_well,
unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M) %>%
pivot_longer(cols = c(unrooted_pd.alpha_100k,unrooted_pd.alpha_1M,
bwpd.alpha_100k,bwpd.alpha_1M),
names_to="metric")
readcounts_samples <- read.csv(paste0(source_data,"readcounts_samples.csv"), header=FALSE)
NROW(readcounts_samples)
r <- cSplit(readcounts_samples, "V1","_")
r$DNA_plate <- paste0(r$V1_1,"_",r$V1_2)
r <- cSplit(r, "V1_3",".")
r <- r %>%
dplyr::select(DNA_plate,V1_3_1, V3)
colnames(r) <- c("DNA_plate","DNA_well","read_count")
head(r)
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K
alpha_100K$metric = "100k"
alpha_1M$metric = "1M"
alpha_1M
rbind(alpha_100K,
alpha_1M)
alpha <- rbind(alpha_100K,
alpha_1M)
r
alpha
alpha %>%
group_by(metric) %>%
dplyr::summarise(median_unrooted=median(unrooted_pd),
sd_unrooted=sd(unrooted_pd),
median_bwpd=median(bwpd),
sd_bwpd=sd(bwpd))
alpha
beta
beta_100K <- read_csv(paste0(middle_dir,"PD_100K/pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_1M <- read_csv(paste0(middle_dir,"pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_100K <- get_cleaner_fun(beta_100K)
beta_1M <- get_cleaner_fun(beta_1M)
NROW(beta_100K)
NROW(beta_1M)
beta_1M
beta_100K$metric = "100k"
beta_1M$metric = "1M"
beta_100K$metric = "100k"
beta_1M$metric = "1M"
beta <- rbind(beta_100K,
beta_1M)
beta
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K$metric = "100k"
alpha_1M$metric = "1M"
alpha <- rbind(alpha_100K,
alpha_1M)
# median and sd
alpha %>%
group_by(metric) %>%
dplyr::summarise(median_unrooted=median(unrooted_pd),
sd_unrooted=sd(unrooted_pd),
median_bwpd=median(bwpd),
sd_bwpd=sd(bwpd))
alpha
alpha
alpha
alpha %>%
pivot_wider(id_cols = c(DNA_plate, DNA_well, metric))
alpha %>%
pivot_wider(names_from = c(DNA_plate, DNA_well, metric) )
alpha
alpha %>%
pivot_wider(names_from = c(DNA_plate, DNA_well, metric) )
alpha
alpha %>%
pivot_longer(names_from = c(DNA_plate, DNA_well, metric) )
readcounts_samples <- read.csv(paste0(source_data,"readcounts_samples.csv"), header=FALSE)
NROW(readcounts_samples)
r <- cSplit(readcounts_samples, "V1","_")
r$DNA_plate <- paste0(r$V1_1,"_",r$V1_2)
r <- cSplit(r, "V1_3",".")
r <- r %>%
dplyr::select(DNA_plate,V1_3_1, V3)
colnames(r) <- c("DNA_plate","DNA_well","read_count")
head(r)
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K$metric = "100k"
alpha_1M$metric = "1M"
alpha <- rbind(alpha_100K,
alpha_1M)
alpha <- rbind(alpha_100K,
alpha_1M)
alpha
# median and sd
alpha %>%
group_by(metric) %>%
dplyr::summarise(median_unrooted=median(unrooted_pd),
sd_unrooted=sd(unrooted_pd),
median_bwpd=median(bwpd),
sd_bwpd=sd(bwpd))
alpha
alpha %>%
dplyr::select(unrooted_pd, bwpd, DNA_plate, DNA_well, metric)
alpha %>%
dplyr::select(unrooted_pd, bwpd, DNA_plate, DNA_well, metric) %>%
pivot_wider(names_from = "metric")
alpha %>%
dplyr::select(unrooted_pd, bwpd, DNA_plate, DNA_well, metric) %>%
pivot_wider(names_from = "metric", values_from = c(unrooted_pd, bwpd))
# median and sd
alpha %>%
group_by(metric) %>%
dplyr::summarise(median_unrooted=median(unrooted_pd),
sd_unrooted=sd(unrooted_pd),
median_bwpd=median(bwpd),
sd_bwpd=sd(bwpd))
alpha %>%
dplyr::select(unrooted_pd, bwpd, DNA_plate, DNA_well, metric) %>%
pivot_wider(names_from = "metric", values_from = c(unrooted_pd, bwpd)) %>%
ggplot()
alpha %>%
dplyr::select(unrooted_pd, bwpd, DNA_plate, DNA_well, metric) %>%
pivot_wider(names_from = "metric", values_from = c(unrooted_pd, bwpd))
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K$metric = "100k"
alpha_1M$metric = "1M"
alpha_1M
# unrooted_pd: comparison of analyses
cor(x = df$unrooted_pd.alpha_100k,y=df$unrooted_pd.alpha_1M, method = "pearson")
df
alpha
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K
alpha_100K %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well)
alpha_100K %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric")
alpha_100K %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric") %>%
dplyr::mutate(analysis = "100K")
alpha_100K <- alpha_100K %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric") %>%
dplyr::mutate(analysis = "100K")
alpha_1M <- alpha_1M %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric") %>%
dplyr::mutate(analysis = "1M")
alpha <- rbind(alpha_100K,
alpha_1M)
alpha
alpha %>%
pivot_wider(values_from = value)
alpha %>%
pivot_wider(values_from = value, names_from = metric)
alpha %>%
pivot_wider(values_from = value, names_from = analysis)
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100k`,y=`1M`))+
geom_point()+
facet_wrap(~metric)
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point()+
facet_wrap(~metric)
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point()+
facet_wrap(~metric, scales="free")
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point()+
geom_smooth("lm")+
facet_wrap(~metric, scales="free")
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3) +
facet_wrap(~metric, scales="free")
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")
alpha <- rbind(alpha_100K,
alpha_1M)
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")
alpha %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")
beta_100K <- read_csv(paste0(middle_dir,"PD_100K/pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_1M <- read_csv(paste0(middle_dir,"pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_100K <- get_cleaner_fun(beta_100K)
beta_1M <- get_cleaner_fun(beta_1M)
NROW(beta_100K)
NROW(beta_1M)
beta_100K$metric = "100k"
beta_1M$metric = "1M"
beta <- rbind(beta_100K,
beta_1M)
beta_100K <- read_csv(paste0(middle_dir,"PD_100K/pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_1M <- read_csv(paste0(middle_dir,"pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_100K <- get_cleaner_fun(beta_100K)
beta_1M <- get_cleaner_fun(beta_1M)
beta_1M
beta_100K <- beta_100K %>%
dplyr::select(X2,X3,X4,X5,X6,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(X2,X3,X4,X5,X6), names_to="metric") %>%
dplyr::mutate(analysis = "100K")
beta_1M <- beta_1M %>%
dplyr::select(X2,X3,X4,X5,X6,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(X2,X3,X4,X5,X6), names_to="metric") %>%
dplyr::mutate(analysis = "1M")
beta <- rbind(beta_100K,
beta_1M)
beta
beta$metric <- gsub("X2","PC1",beta$metric)
beta$metric <- gsub("X3","PC2",beta$metric)
beta$metric <- gsub("X4","PC3",beta$metric)
beta$metric <- gsub("X5","PC4",beta$metric)
beta$metric <- gsub("X6","PC5",beta$metric)
beta
rbind(alpha,beta)
both <- rbind(alpha,beta)
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")
# give some order
both$metric <- factor(both$metric,
levels=c("unrooted_pd","bwpd",
"PC1","PC2","PC3","PC4","PC5"))
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")+
stat_cor(method = "pearson")
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")+
stat_cor(method = "pearson", r.accuracy = 0.0001)
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")+
stat_cor(method = "pearson", r.accuracy = 0.0001, size=3)
library(readr)
library(tidyverse)
library(ggplot2)
library(splitstackshape)
library(ggpubr)
source_data = "/Users/danielagaio/Gaio/github/metapigs_phylodiv/source_data/" # git
middle_dir = "/Users/danielagaio/Gaio/github/metapigs_phylodiv/middle_dir/" # git
stats_dir = "/Users/danielagaio/Gaio/github/metapigs_phylodiv/middle_dir/stats/" # git
out_dir_git = "/Users/danielagaio/Gaio/github/metapigs_phylodiv/out/" # git
out_dir = "/Users/danielagaio/Desktop/metapigs_phylodiv/phylosift/out/" # local
readcounts_samples <- read.csv(paste0(source_data,"readcounts_samples.csv"), header=FALSE)
NROW(readcounts_samples)
r <- cSplit(readcounts_samples, "V1","_")
r$DNA_plate <- paste0(r$V1_1,"_",r$V1_2)
r <- cSplit(r, "V1_3",".")
r <- r %>%
dplyr::select(DNA_plate,V1_3_1, V3)
colnames(r) <- c("DNA_plate","DNA_well","read_count")
head(r)
alpha_1M <- read.csv(paste0(middle_dir,"all.alphadiv"), sep="")
alpha_100K <- read.csv(paste0(middle_dir,"PD_100k/all.alphadiv"), sep="")
get_cleaner_fun <- function(df) {
colnames(df)[1] <- "provv"
df <- cSplit(df, "provv","_")
df$DNA_plate <- paste0(df$provv_1,"_",df$provv_2)
df$DNA_well <- df$provv_3
df <- df %>% dplyr::select(!starts_with("provv"))
df_clean <- df
return(df_clean)
}
alpha_100K <- get_cleaner_fun(alpha_100K)
alpha_1M <- get_cleaner_fun(alpha_1M)
alpha_100K <- alpha_100K %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric") %>%
dplyr::mutate(analysis = "100K")
alpha_1M <- alpha_1M %>%
dplyr::select(unrooted_pd,bwpd,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(unrooted_pd,bwpd), names_to="metric") %>%
dplyr::mutate(analysis = "1M")
alpha <- rbind(alpha_100K,
alpha_1M)
# median and sd
alpha %>%
group_by(metric) %>%
dplyr::summarise(median_unrooted=median(unrooted_pd),
sd_unrooted=sd(unrooted_pd),
median_bwpd=median(bwpd),
sd_bwpd=sd(bwpd))
beta_100K <- read_csv(paste0(middle_dir,"PD_100K/pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_1M <- read_csv(paste0(middle_dir,"pca_piggies_sel.txt.proj"),
col_names = FALSE)
beta_100K <- get_cleaner_fun(beta_100K)
beta_1M <- get_cleaner_fun(beta_1M)
beta_100K <- beta_100K %>%
dplyr::select(X2,X3,X4,X5,X6,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(X2,X3,X4,X5,X6), names_to="metric") %>%
dplyr::mutate(analysis = "100K")
beta_1M <- beta_1M %>%
dplyr::select(X2,X3,X4,X5,X6,DNA_plate,DNA_well) %>%
pivot_longer(cols=c(X2,X3,X4,X5,X6), names_to="metric") %>%
dplyr::mutate(analysis = "1M")
beta <- rbind(beta_100K,
beta_1M)
beta$metric <- gsub("X2","PC1",beta$metric)
beta$metric <- gsub("X3","PC2",beta$metric)
beta$metric <- gsub("X4","PC3",beta$metric)
beta$metric <- gsub("X5","PC4",beta$metric)
beta$metric <- gsub("X6","PC5",beta$metric)
both <- rbind(alpha,beta)
# give some order
both$metric <- factor(both$metric,
levels=c("unrooted_pd","bwpd",
"PC1","PC2","PC3","PC4","PC5"))
pdf(paste0(out_dir,"correlation_100k_vs_1M_analysis.pdf"))
both %>%
pivot_wider(values_from = value, names_from = analysis) %>%
ggplot(., aes(x=`100K`,y=`1M`))+
geom_point(shape=1, size=1)+
geom_smooth(method="lm", size=0.3)+
facet_wrap(~metric, scales="free")+
stat_cor(method = "pearson", r.accuracy = 0.0001, size=3)
dev.off()
